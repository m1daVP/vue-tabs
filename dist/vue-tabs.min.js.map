{"version":3,"file":"vue-tabs.min.js","sources":["../node_modules/babel-helper-vue-jsx-merge-props/index.js","../src/components/VueTabs.js","../src/components/VTab.js","../src/index.js"],"sourcesContent":["var nestRE = /^(attrs|props|on|nativeOn|class|style|hook)$/\n\nmodule.exports = function mergeJSXProps (objs) {\n  return objs.reduce(function (a, b) {\n    var aa, bb, key, nestedKey, temp\n    for (key in b) {\n      aa = a[key]\n      bb = b[key]\n      if (aa && nestRE.test(key)) {\n        // normalize class\n        if (key === 'class') {\n          if (typeof aa === 'string') {\n            temp = aa\n            a[key] = aa = {}\n            aa[temp] = true\n          }\n          if (typeof bb === 'string') {\n            temp = bb\n            b[key] = bb = {}\n            bb[temp] = true\n          }\n        }\n        if (key === 'on' || key === 'nativeOn' || key === 'hook') {\n          // merge functions\n          for (nestedKey in bb) {\n            aa[nestedKey] = mergeFn(aa[nestedKey], bb[nestedKey])\n          }\n        } else if (Array.isArray(aa)) {\n          a[key] = aa.concat(bb)\n        } else if (Array.isArray(bb)) {\n          a[key] = [aa].concat(bb)\n        } else {\n          for (nestedKey in bb) {\n            aa[nestedKey] = bb[nestedKey]\n          }\n        }\n      } else {\n        a[key] = b[key]\n      }\n    }\n    return a\n  }, {})\n}\n\nfunction mergeFn (a, b) {\n  return function () {\n    a && a.apply(this, arguments)\n    b && b.apply(this, arguments)\n  }\n}\n","export default {\r\n    name: 'vue-tabs',\r\n    props: {\r\n        activeTabColor: String,\r\n        activeTextColor: String,\r\n        disabledColor: String,\r\n        disabledTextColor: String,\r\n        /**\r\n         * Tab title position: center | bottom | top\r\n         */\r\n        textPosition: {\r\n            type: String,\r\n            default: 'center'\r\n        },\r\n        /**\r\n         * Tab type: tabs | pills\r\n         */\r\n        type: {\r\n            type: String,\r\n            default: 'tabs'\r\n        },\r\n        direction: {\r\n            type: String,\r\n            default: 'horizontal'\r\n        },\r\n        /**\r\n         * Centers the tabs and makes the container div full width\r\n         */\r\n        centered: Boolean,\r\n        value: [String, Number, Object]\r\n    },\r\n    data () {\r\n        return {\r\n            activeTabIndex: 0,\r\n            tabs: []\r\n        }\r\n    },\r\n    computed: {\r\n        isTabShape () {\r\n            return this.type === 'tabs'\r\n        },\r\n        isStacked () {\r\n            return this.direction === 'vertical'\r\n        },\r\n        classList () {\r\n            let navType = this.isTabShape ? 'nav-tabs' : 'nav-pills'\r\n            let centerClass = this.centered ? 'nav-justified' : ''\r\n            let isStacked = this.isStacked ? 'nav-stacked' : ''\r\n            return `nav ${navType} ${centerClass} ${isStacked}`\r\n        },\r\n        stackedClass () {\r\n            return this.isStacked ? 'stacked' : ''\r\n        },\r\n        activeTabStyle () {\r\n            return {\r\n                backgroundColor: this.activeTabColor,\r\n                color: this.activeTextColor\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        navigateToTab (index, route) {\r\n            this.changeTab(this.activeTabIndex, index, route)\r\n        },\r\n        activateTab (index) {\r\n            this.activeTabIndex = index\r\n            let tab = this.tabs[index]\r\n            tab.active = true\r\n            this.$emit('input', tab.title)\r\n        },\r\n        changeTab (oldIndex, newIndex, route) {\r\n            let oldTab = this.tabs[oldIndex] || {}\r\n            let newTab = this.tabs[newIndex]\r\n            if (newTab.disabled) return;\r\n            this.activeTabIndex = newIndex\r\n            oldTab.active = false\r\n            newTab.active = true\r\n            this.$emit('input', this.tabs[newIndex].title)\r\n            this.$emit('tab-change', newIndex, newTab, oldTab)\r\n            this.tryChangeRoute(route)\r\n        },\r\n        tryChangeRoute (route) {\r\n            if (this.$router && route) {\r\n                this.$router.push(route)\r\n            }\r\n        },\r\n        addTab (item) {\r\n            const index = this.$slots.default.indexOf(item.$vnode);\r\n            this.tabs.splice(index, 0, item);\r\n        },\r\n        removeTab (item) {\r\n            const tabs = this.tabs;\r\n            const index = tabs.indexOf(item);\r\n            if (index > -1) {\r\n                tabs.splice(index, 1);\r\n            }\r\n        },\r\n        getTabs () {\r\n            if (this.$slots.default) {\r\n                return this.$slots.default.filter(comp => comp.componentOptions)\r\n            }\r\n            return []\r\n        },\r\n        findTabAndActivate (tabNameOrIndex) {\r\n            let indexToActivate = this.tabs.findIndex((tab, index) => tab.title === tabNameOrIndex || index === tabNameOrIndex);\r\n            // if somehow activeTabIndex is not reflected in the actual vue-tab instance, set it.\r\n            if (\r\n                indexToActivate === this.activeTabIndex\r\n                && !this.tabs[this.activeTabIndex].active\r\n            ) {\r\n                this.tabs[this.activeTabIndex].active = true;\r\n            }\r\n            if (indexToActivate !== -1) {\r\n                this.changeTab(this.activeTabIndex, indexToActivate)\r\n            } else {\r\n                this.changeTab(this.activeTabIndex, 0)\r\n            }\r\n        },\r\n        renderTabTitle (index, position = 'top') {\r\n            if (this.tabs.length === 0) return\r\n            let tab = this.tabs[index]\r\n            let {active, title} = tab\r\n            let titleStyles = {color: this.activeTabColor}\r\n            if (position === 'center') titleStyles.color = this.activeTextColor\r\n            let simpleTitle = (<span class={`title title_${position}`} style={active ? titleStyles : {}}>{position === 'center' && this.renderIcon(index)}{title}</span>)\r\n\r\n            if (tab.$slots.title) return tab.$slots.title\r\n            if (tab.$scopedSlots.title) return tab.$scopedSlots.title({\r\n                active: active,\r\n                title: title,\r\n                position: position,\r\n                icon: tab.icon,\r\n                data: tab.tabData\r\n            });\r\n            return simpleTitle\r\n        },\r\n        renderIcon (index) {\r\n            if (this.tabs.length === 0) return\r\n            let tab = this.tabs[index]\r\n            let {icon} = tab\r\n            let simpleIcon = <i class={icon}>&nbsp;</i>\r\n            if (!tab.$slots.title && icon) return simpleIcon\r\n        },\r\n        tabStyles (tab) {\r\n            if (tab.disabled) {\r\n                return {\r\n                    backgroundColor: this.disabledColor,\r\n                    color: this.disabledTextColor\r\n                }\r\n            }\r\n            return {}\r\n        },\r\n        renderTabs () {\r\n            return this.tabs.map((tab, index) => {\r\n                if (!tab) return\r\n                let {route, id, title, icon, tabId} = tab\r\n                let active = this.activeTabIndex === index\r\n                return (\r\n                    <li name=\"tab\" onClick={() => !tab.disabled && this.navigateToTab(index, route)}\r\n                        class={['tab', {active: active}, {disabled: tab.disabled}]}\r\n                        key={title}\r\n                        id={`t-${tabId}`}\r\n                        aria-selected={active}\r\n                        aria-controls={`p-${tabId}`}\r\n                        role=\"tab\">\r\n                        {this.textPosition === 'top' &&\r\n                        this.renderTabTitle(index, this.textPosition)\r\n                        }\r\n                        <a href=\"#\"\r\n                           onClick={(e) => {\r\n                             e.preventDefault();\r\n                             return false;\r\n                           }}\r\n                           style={active ? this.activeTabStyle : this.tabStyles(tab)}\r\n                           class={[{'active_tab': active}, 'tabs__link']}\r\n                           role=\"tab\">\r\n                            {this.textPosition !== 'center' && !tab.$slots.title && this.renderIcon(index)}\r\n                            {this.textPosition === 'center' &&\r\n                            this.renderTabTitle(index, this.textPosition)\r\n                            }\r\n                        </a>\r\n                        {this.textPosition === 'bottom' &&\r\n                        this.renderTabTitle(index, this.textPosition)\r\n                        }\r\n                    </li>\r\n                )\r\n            })\r\n        }\r\n    },\r\n    render () {\r\n        const tabList = this.renderTabs()\r\n        return (\r\n            <div class={['vue-tabs', this.stackedClass]}>\r\n                <div class={[{'nav-tabs-navigation': !this.isStacked}, {'left-vertical-tabs': this.isStacked}]}>\r\n                    <div class={['nav-tabs-wrapper', this.stackedClass]}>\r\n                        <ul class={this.classList} role=\"tablist\">\r\n                            {tabList}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class={['tab-content', {'right-text-tabs': this.isStacked}]}>\r\n                    {this.$slots.default}\r\n                </div>\r\n            </div>)\r\n    },\r\n    watch: {\r\n        tabs (newList) {\r\n            if (newList.length > 0 && !this.value) {\r\n                if (newList.length <= this.activeTabIndex) {\r\n                    this.activateTab(this.activeTabIndex - 1);\r\n                } else {\r\n                    this.activateTab(this.activeTabIndex);\r\n                }\r\n            }\r\n            if (newList.length > 0 && this.value) {\r\n                this.findTabAndActivate(this.value)\r\n            }\r\n        },\r\n        value (newVal) {\r\n            this.findTabAndActivate(newVal)\r\n        }\r\n    }\r\n}\r\n","export default {\r\n    name: 'v-tab',\r\n    props: {\r\n        title: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        icon: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        tabData: {\r\n            default: null\r\n        },\r\n        /***\r\n         * Function to execute before tab switch. Return value must be boolean\r\n         * If the return result is false, tab switch is restricted\r\n         */\r\n        beforeChange: {\r\n            type: Function\r\n        },\r\n        id: String,\r\n        route: {\r\n            type: [String, Object]\r\n        },\r\n        disabled: Boolean,\r\n        transitionName: String,\r\n        transitionMode: String\r\n    },\r\n    computed: {\r\n        isValidParent () {\r\n            return this.$parent.$options.name === 'vue-tabs'\r\n        },\r\n        hash () {\r\n            return `#${this.id}`\r\n        },\r\n        tabId () {\r\n            return this.id ? this.id : this.title\r\n        }\r\n    },\r\n    data () {\r\n        return {\r\n            active: false,\r\n            validationError: null\r\n        }\r\n    },\r\n    mounted () {\r\n        this.$parent.addTab(this)\r\n    },\r\n    destroyed () {\r\n        if (this.$el && this.$el.parentNode) {\r\n            this.$el.parentNode.removeChild(this.$el);\r\n        }\r\n        this.$parent.removeTab(this);\r\n    },\r\n    render () {\r\n        return (\r\n            <section class=\"tab-container\"\r\n                     id={`p-${this.tabId}`}\r\n                     aria-labelledby={`t-${this.tabId}`}\r\n                     role=\"tabpanel\" v-show={this.active}>\r\n                {this.$slots.default}\r\n            </section>)\r\n    }\r\n}\r\n","import VueTabs from './components/VueTabs.js'\r\nimport VTab from './components/VTab.js'\r\nconst VueTabsPlugin = {\r\n  install(Vue) {\r\n    Vue.component('vue-tabs', VueTabs)\r\n    Vue.component('v-tab', VTab)\r\n  }\r\n}\r\n// Automatic installation if Vue has been added to the global scope.\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(VueTabsPlugin)\r\n  window.VueTabs = VueTabsPlugin\r\n}\r\nexport default VueTabsPlugin\r\nexport {\r\n    VueTabs,\r\n    VTab\r\n}"],"names":["objs","reduce","a","b","aa","bb","key","nestedKey","temp","nestRE","test","apply","this","arguments","Array","isArray","concat","String","Boolean","Number","Object","type","direction","isTabShape","centered","isStacked","activeTabColor","activeTextColor","index","route","changeTab","activeTabIndex","tab","tabs","active","$emit","title","oldIndex","newIndex","oldTab","newTab","disabled","tryChangeRoute","$router","push","item","$slots","default","indexOf","$vnode","splice","filter","comp","componentOptions","tabNameOrIndex","indexToActivate","findIndex","titleStyles","position","length","color","simpleTitle","h","class","style","renderIcon","$scopedSlots","icon","tabData","simpleIcon","disabledColor","disabledTextColor","map","tabId","id","_this","name","navigateToTab","textPosition","renderTabTitle","href","activeTabStyle","tabStyles","active_tab","e","preventDefault","tabList","renderTabs","stackedClass","nav-tabs-navigation","left-vertical-tabs","classList","role","right-text-tabs","newList","value","activateTab","findTabAndActivate","newVal","Function","$parent","$options","addTab","$el","parentNode","removeChild","removeTab","VueTabsPlugin","Vue","component","VueTabs","VTab","window","use"],"mappings":";;;;;0LAEiB,WAAwBA,UAChCA,EAAKC,OAAO,SAAUC,EAAGC,OAC1BC,EAAIC,EAAIC,EAAKC,EAAWC,MACvBF,KAAOH,OACLD,EAAEI,KACFH,EAAEG,GACHF,GAAMK,EAAOC,KAAKJ,CAAZ,KAEI,UAARA,IACgB,UAAd,OAAOF,MACFA,IACLE,GAAOF,EAAK,KACXI,GAAQ,CAAA,GAEK,UAAd,OAAOH,OACFA,IACLC,GAAOD,EAAK,KACXG,GAAQ,CAAA,GAGH,OAARF,GAAwB,aAARA,GAA8B,SAARA,MAEnCC,KAAaF,IACbE,GAmBf,SAAkBL,EAAGC,UACZ,cACAD,EAAES,MAAMC,KAAMC,SAAd,KACAV,EAAEQ,MAAMC,KAAMC,SAAd,IAtB2BT,EAAGG,GAAYF,EAAGE,EAA1B,OAEb,GAAIO,MAAMC,QAAQX,CAAd,IACPE,GAAOF,EAAGY,OAAOX,CAAV,OACJ,GAAIS,MAAMC,QAAQV,CAAd,IACPC,GAAO,CAACF,GAAIY,OAAOX,CAAZ,WAEJE,KAAaF,IACbE,GAAaF,EAAGE,UAIrBD,GAAOH,EAAEG,UAGRJ,GACN,EAtCI,EAHT,IAAIO,EAAS,+CCAb,MAAe,MACL,iBACC,gBACaQ,uBACCA,qBACFA,yBACIA,oBAIL,MACJA,eACG,eAKP,MACIA,eACG,kBAEF,MACDA,eACG,uBAKHC,cACH,CAACD,OAAQE,OAAQC,+BAGjB,gBACa,OACV,cAGJ,6BAEmB,SAAdR,KAAKS,iCAGc,aAAnBT,KAAKU,8CAGEV,KAAKW,WAAa,WAAa,kBAC3BX,KAAKY,SAAW,gBAAkB,SACpCZ,KAAKa,UAAY,cAAgB,oCAI1Cb,KAAKa,UAAY,UAAY,oCAG7B,iBACcb,KAAKc,qBACfd,KAAKe,2BAIf,wBACUC,EAAOC,QACbC,UAAUlB,KAAKmB,eAAgBH,EAAOC,CAA3C,wBAESD,QACJG,eAAiBH,EAClBI,EAAMpB,KAAKqB,KAAKL,KAChBM,OAAS,CAAA,OACRC,MAAM,QAASH,EAAII,KAAxB,sBAEOC,EAAUC,EAAUT,OACvBU,EAAS3B,KAAKqB,KAAKI,IAAa,GAChCG,EAAS5B,KAAKqB,KAAKK,GACnBE,EAAOC,gBACNV,eAAiBO,IACfJ,OAAS,CAAA,IACTA,OAAS,CAAA,OACXC,MAAM,QAASvB,KAAKqB,KAAKK,GAAUF,KAAxC,OACKD,MAAM,aAAcG,EAAUE,EAAQD,CAA3C,OACKG,eAAeb,CAApB,4BAEYA,GACRjB,KAAK+B,SAAWd,QACXc,QAAQC,KAAKf,CAAlB,mBAGAgB,OACEjB,EAAQhB,KAAKkC,OAAOC,QAAQC,QAAQH,EAAKI,MAAjC,OACThB,KAAKiB,OAAOtB,EAAO,EAAGiB,CAA3B,sBAEOA,OACDZ,EAAOrB,KAAKqB,KACZL,EAAQK,EAAKe,QAAQH,CAAb,EACF,CAAC,EAATjB,KACKsB,OAAOtB,EAAO,CAAnB,6BAIAhB,KAAKkC,OAAOC,QACLnC,KAAKkC,OAAOC,QAAQI,OAAO,mBAAQC,EAAKC,iBAAxC,EAEJ,gCAESC,OACZC,EAAkB3C,KAAKqB,KAAKuB,UAAU,SAACxB,EAAKJ,UAAUI,EAAII,QAAUkB,GAAkB1B,IAAU0B,EAA9E,EAGlBC,IAAoB3C,KAAKmB,gBACrBnB,KAAKqB,KAAKrB,KAAKmB,gBAAgBG,cAE9BD,KAAKrB,KAAKmB,gBAAgBG,OAAS,CAAA,GAEpB,CAAC,IAArBqB,OACKzB,UAAUlB,KAAKmB,eAAgBwB,CAApC,OAEKzB,UAAUlB,KAAKmB,eAAgB,CAApC,2BAGQH,OAERI,EACCE,EAAQE,EACTqB,EAJeC,yDAAW,+BACL,IAArB9C,KAAKqB,KAAK0B,cAETzB,GADDF,EAAMpB,KAAKqB,KAAKL,IACfM,OAAQE,EAASJ,EAATI,MACTqB,EAAc,CAACG,MAAOhD,KAAKc,gBACd,WAAbgC,IAAuBD,EAAYG,MAAQhD,KAAKe,iBAChDkC,EAAeC,UAAMC,qBAAsBL,EAAYM,MAAO9B,EAASuB,EAAc,KAAkB,WAAbC,GAAyB9C,KAAKqD,WAAWrC,CAAhB,EAAwBQ,IAE3IJ,EAAIc,OAAOV,QACXJ,EAAIkC,aAAa9B,MAAcJ,EAAIkC,aAAa9B,MAAM,QAC9CF,QACDE,WACGsB,OACJ1B,EAAImC,UACJnC,EAAIoC,QALqB,EAO5BP,wBAECjC,OAIJyC,2BAHqB,IAArBzD,KAAKqB,KAAK0B,cAGVU,EAAaP,OAAGC,MADfI,GADDnC,EAAMpB,KAAKqB,KAAKL,IACfuC,aAED,CAACnC,EAAIc,OAAOV,OAAS+B,EAAaE,6BAE/BrC,UACHA,EAAIS,SACG,iBACc7B,KAAK0D,oBACf1D,KAAK2D,mBAGb,kEAGA3D,KAAKqB,KAAKuC,IAAI,SAACxC,EAAKJ,OAElBC,EAAWO,EAAaqC,EACzBvC,KAFCF,SACAH,EAAiCG,EAAjCH,MAAiCG,EAA1B0C,GAAItC,EAAsBJ,EAAtBI,MAAsBJ,EAAfmC,KAAMM,EAASzC,EAATyC,MACzBvC,EAASyC,EAAK5C,iBAAmBH,EAEjCkC,kBAAIc,KAAK,cAGIH,kBACMvC,uBACKuC,OACf,aALE,CAAC,MAAO,CAACvC,OAAQA,GAAS,CAACO,SAAUT,EAAIS,eAC3CL,0HAFqB,CAACJ,EAAIS,UAAYkC,EAAKE,cAAcjD,EAAOC,CAA1B,CAA/C,oCAO2B,QAAtB8C,EAAKG,cACNH,EAAKI,eAAenD,EAAO+C,EAAKG,YAAhC,EAEAhB,iBAAGkB,KAAK,SAOA,aAFE9C,EAASyC,EAAKM,eAAiBN,EAAKO,UAAUlD,CAAf,QAC/B,CAAC,CAACmD,WAAcjD,GAAS,8HALtBkD,YACNC,iBACK,CAAA,CAHZ,oCAQ2B,WAAtBV,EAAKG,cAA6B,CAAC9C,EAAIc,OAAOV,OAASuC,EAAKV,WAAWrC,CAAhB,EACjC,WAAtB+C,EAAKG,cACNH,EAAKI,eAAenD,EAAO+C,EAAKG,YAAhC,IAGmB,WAAtBH,EAAKG,cACNH,EAAKI,eAAenD,EAAO+C,EAAKG,YAAhC,IA7BL,yCAqCLQ,EAAU1E,KAAK2E,oBAEjBzB,SAAKC,MAAO,CAAC,WAAYnD,KAAK4E,gBAC1B1B,SAAKC,MAAO,CAAC,CAAC0B,sBAAuB,CAAC7E,KAAKa,WAAY,CAACiE,qBAAsB9E,KAAKa,cAC/EqC,SAAKC,MAAO,CAAC,mBAAoBnD,KAAK4E,gBAClC1B,QAAIC,MAAOnD,KAAK+E,iBAAWC,KAAK,aAC3BN,QAIbxB,SAAKC,MAAO,CAAC,cAAe,CAAC8B,kBAAmBjF,KAAKa,cAChDb,KAAKkC,OAAOC,mBAItB,eACG+C,GACmB,EAAjBA,EAAQnC,QAAc,CAAC/C,KAAKmF,QACxBD,EAAQnC,QAAU/C,KAAKmB,oBAClBiE,YAAYpF,KAAKmB,eAAiB,CAAvC,OAEKiE,YAAYpF,KAAKmB,cAAtB,GAGa,EAAjB+D,EAAQnC,QAAc/C,KAAKmF,YACtBE,mBAAmBrF,KAAKmF,KAA7B,kBAGDG,QACED,mBAAmBC,CAAxB,OC3NG,MACL,cACC,OACI,MACGjF,eACG,SAEP,MACIA,eACG,YAEJ,SACI,mBAMC,MACJkF,aAENlF,aACG,MACG,CAACA,OAAQG,kBAETF,uBACMD,sBACAA,iBAEV,gCAEoC,aAA/BL,KAAKwF,QAAQC,SAASzB,gCAGlBhE,KAAK8D,4BAGT9D,KAAK8D,IAAe9D,KAAKwB,8BAI7B,QACK,CAAA,kBACS,+BAIhBgE,QAAQE,OAAO1F,IAApB,wBAGIA,KAAK2F,KAAO3F,KAAK2F,IAAIC,iBAChBD,IAAIC,WAAWC,YAAY7F,KAAK2F,GAArC,OAECH,QAAQM,UAAU9F,IAAvB,4BAIIkD,2BAASC,MAAM,uBACNW,QAAS9D,KAAK6D,6BACQ7D,KAAK6D,WACtB,2CAAmB7D,KAAKsB,WACjCtB,KAAKkC,OAAOC,YC3DvB4D,EAAgB,kBACZC,KACFC,UAAU,WAAYC,CAA1B,IACID,UAAU,QAASE,CAAvB,IAIkB,aAAlB,OAAOC,QAA0BA,OAAOJ,aACnCA,IAAIK,IAAIN,CAAf,SACOG,QAAUH"}